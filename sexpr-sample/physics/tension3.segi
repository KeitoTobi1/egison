(define $C [| [| α 0 0 |] [| 0 β 0 |] [| 0 0 γ |] |])

(define $I (lambda [%C] (trace C)))

(define $II
  (lambda [%C]
    (/ (- (** (trace C) 2) (trace (M.* C C)))
       2)))

(define $III (lambda [%C] (M.det C)))

(define $I' (lambda [%C] (/ (I C) (** (III C) (/ 1 3)))))
(define $II' (lambda [%C] (/ (II C) (** (III C) (/ 2 3)))))

(define $W (+ (* c_1 (- (I' C) 3)) (* c_2 (- (II' C) 3))))

(define $S_i_j (- (* 2 (∂/∂ W C~i~j)) (* p (M.inverse C)_i_j)))

(expand-all (substitute {[α l] [β (/ 1 (sqrt l))] [γ (/ 1 (sqrt l))]} S_#_#))
;[|[| (/ (+ (* 4 c_1 l^2) (* -4 c_1 (sqrt l)) (* 4 c_2 l (sqrt l)) (* -4 c_2) (* -3 p l)) (* 3 l^2)) 0 0 |]
;  [| 0 (/ (+ (* -2 c_1 l^2 (sqrt l)) (* 2 c_1 l) (* -2 c_2 l^2) (* 2 c_2 (sqrt l)) (* -3 p l (sqrt l))) (* 3 l)) 0 |]
;  [| 0 0 (/ (+ (* -2 c_1 l^2 (sqrt l)) (* 2 c_1 l) (* -2 c_2 l^2) (* 2 c_2 (sqrt l)) (* -3 p l (sqrt l))) (* 3 l)) |]|]_#_#
