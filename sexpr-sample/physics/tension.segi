(define $C [| [| α 0 0 |] [| 0 β 0 |] [| 0 0 γ |] |])

(define $I (lambda [%C] (trace C)))

(define $II
  (lambda [%C]
    (/ (- (** (trace C) 2) (trace (M.* C C)))
       2)))

(define $III (lambda [%C] (M.det C)))

(define $W (+ (* c1 (- (I C) 3)) (* c2 (- (II C) 3))))

(I C);(+ α β γ)
(II C);(+ (* α β) (* α γ) (* β γ))
(III C);(* α β γ)

(∂/∂ (I C) C~i~j)
;[| [| 1 0 0 |] [| 0 1 0 |] [| 0 0 1 |] |]_i_j
(∂/∂ (II C) C~i~j)
;[| [| (+ β γ) 0 0 |] [| 0 (+ α γ) 0 |] [| 0 0 (+ α β) |] |]_i_j
(∂/∂ (III C) C~i~j)
;[| [| (* β γ) 0 0 |] [| 0 (* α γ) 0 |] [| 0 0 (* α β) |] |]_i_j

W
;(+ (* c1 α) (* c1 β) (* c1 γ) (* -3 c1) (* c2 α β) (* c2 α γ) (* c2 β γ) (* -3 c2))

(define $S_i_j (- (* 2 (∂/∂ W C~i~j)) (* p (M.inverse C)_i_j)))
S_#_#
;[|[| (/ (+ (* 2 c1 α) (* 2 c2 β α) (* 2 c2 γ α) (* -1 p)) α) 0 0 |]
;  [| 0 (/ (+ (* 2 c1 β) (* 2 c2 α β) (* 2 c2 γ β) (* -1 p)) β) 0 |]
;  [| 0 0 (/ (+ (* 2 c1 γ) (* 2 c2 α γ) (* 2 c2 β γ) (* -1 p)) γ) |]|]_#_#

