(define $texts {"abba" "abracadabra" "seesaw" "elk"  "grrrrrr" "up" "a" "aaaaa.....bbbbb" "Rosetta Code is a programming chrestomathy site."})

(define $shufflingQuality
  (lambda [$l1 $l2]
    (sum (map2 (lambda [$x $y] (if (eq? x y) 1 0)) l1 l2))))

(define $shuffle
  (lambda [$lst]
   (match [lst (randomize lst)] [(list eq) (multiset eq)]
     {[[(loop $i [1 $n]
           <cons $x_i ...> <nil>)
        (loop $i [1 n]
           (dfs <cons (& (|* !,x_i ,x_i) $y_i) ...>) <nil>)] (map 1#y_%1 (between 1 n))]})))

(define $main
  (lambda [$args]
    (each (compose show print)
      (map (lambda [$text]
        (let {[$new (shuffle text)]}
          (S.concat {(pack text) " " (pack new) " " (show (shufflingQuality text new))})))
            (map unpack texts)))))

